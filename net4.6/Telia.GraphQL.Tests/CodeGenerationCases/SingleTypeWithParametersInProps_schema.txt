enum TestEnum {
	Value1
	Value2
	Value3
}

type Query {
  singleNullableIntParam(param: Int): Int
  singleNullableIntParamWithDefaultValue(param: Int = 2): Int
  singleNullableFloatParamWithDefaultValue(param: Float = 2.0): Float
  singleNullableStringParamWithDefaultValue(param: String = "foo"): String
  singleNullableOtherParamWithDefaultValue(param: SomeOtherType = { stuff: "here"}): SomeOtherType
  booleanParamSetToTrue(param: Boolean = true): Boolean
  booleanParamSetToFalse(param: Boolean = false): Boolean
  singleNullableEnumValue(param: TestEnum): TestEnum
  singleNonNullableEnumValue(param: TestEnum!): TestEnum!

  multipleParameters(
	param1: Int,
	param2: Int!,
	param3: Float,
	param4: Float!,
	param5: String,
	param6: String!,
	param7: Boolean,
	param8: Boolean!
	param9: TestEnum,
	param10: TestEnum!
  ): Boolean


  multipleParametersWithDefaultValues(
	param1: Int = 1,
	param2: Int! = 1,
	param3: Float = 1.0,
	param4: Float! = 1.0,
	param5: String = "foo",
	param6: String! = "bar",
	param7: Boolean = true,
	param8: Boolean! = false
	param9: TestEnum = null,
	param10: TestEnum! = Value3,
  ): Boolean
}