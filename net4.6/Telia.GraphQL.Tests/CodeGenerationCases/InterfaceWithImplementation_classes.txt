namespace Test
{
    using System;
    using System.Collections.Generic;
    using Telia.GraphQL.Client.Attributes;

    [GraphQLType("TestInterface")]
    public interface TestInterface
    {
        [GraphQLField("field", "string")]
        string Field
        {
            get;
            set;
        }

        [GraphQLField("fieldWithParam", "Int!")]
        Int32 FieldWithParam([GraphQLArgument("param", "Int!")] Int32 param);
    }

    [GraphQLType("TestInterfaceImplementation1")]
    public class TestInterfaceImplementation1 : TestInterface
    {
        [GraphQLField("field", "string")]
        public virtual string Field
        {
            get;
            set;
        }

        [GraphQLField("fieldWithParam", "Int!")]
        public virtual Int32 FieldWithParam([GraphQLArgument("param", "Int!")] Int32 param)
        {
            throw new InvalidOperationException();
        }
    }

    [GraphQLType("TestInterfaceImplementation2")]
    public class TestInterfaceImplementation2 : TestInterface
    {
        [GraphQLField("field", "string")]
        public virtual string Field
        {
            get;
            set;
        }

        [GraphQLField("fieldWithParam", "Int!")]
        public virtual Int32 FieldWithParam([GraphQLArgument("param", "Int!")] Int32 param)
        {
            throw new InvalidOperationException();
        }

        [GraphQLField("field2", "string")]
        public virtual string Field2
        {
            get;
            set;
        }
    }
}